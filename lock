--// Camlock + Status + Prediction + Smoothness
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local camlockOn = false
local holdingRMB = false
local allowSlot = false
local target = nil
local marker = nil -- BillboardGui

-- Thêm biến config
local prediction = 0.12
local smoothness = 0.15

-- GUI Status Lock
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CamlockUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 200, 0, 120)
Frame.Position = UDim2.new(0.8, 0, 0.5, -60)
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

-- Status label
local StatusLabel = Instance.new("TextLabel", Frame)
StatusLabel.Size = UDim2.new(1, 0, 0, 30)
StatusLabel.Position = UDim2.new(0, 0, 0, 0)
StatusLabel.BackgroundTransparency = 1
StatusLabel.TextColor3 = Color3.new(1, 1, 1)
StatusLabel.TextStrokeTransparency = 0
StatusLabel.TextScaled = true
StatusLabel.Font = Enum.Font.GothamBold
StatusLabel.Text = "Locking: None"

-- Function tạo slider
local function createSlider(name, min, max, default, posY, callback)
    local sliderFrame = Instance.new("Frame", Frame)
    sliderFrame.Size = UDim2.new(1, -10, 0, 30)
    sliderFrame.Position = UDim2.new(0, 5, 0, posY)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

    local label = Instance.new("TextLabel", sliderFrame)
    label.Size = UDim2.new(0.4, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Font = Enum.Font.Gotham
    label.TextScaled = true
    label.Text = name

    local sliderBar = Instance.new("Frame", sliderFrame)
    sliderBar.Size = UDim2.new(0.5, 0, 0.2, 0)
    sliderBar.Position = UDim2.new(0.45, 0, 0.4, 0)
    sliderBar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

    local knob = Instance.new("Frame", sliderBar)
    knob.Size = UDim2.new(0, 10, 1.5, 0)
    knob.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    knob.Position = UDim2.new((default - min) / (max - min), -5, -0.25, 0)

    local dragging = false
    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    UIS.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    RunService.RenderStepped:Connect(function()
        if dragging then
            local mouse = UIS:GetMouseLocation().X
            local relative = math.clamp((mouse - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
            knob.Position = UDim2.new(relative, -5, -0.25, 0)
            local value = min + (max - min) * relative
            callback(value)
        end
    end)
end

-- Slider Prediction
createSlider("Prediction", 0, 0.3, prediction, 35, function(val)
    prediction = val
end)

-- Slider Smoothness
createSlider("Smoothness", 0, 1, smoothness, 70, function(val)
    smoothness = val
end)

-- Helper
local function valid(plr)
    if not plr or plr == LocalPlayer then return false end
    local char = plr.Character
    if not char then return false end
    local hum = char:FindFirstChildOfClass("Humanoid")
    local head = char:FindFirstChild("Head")
    return hum and hum.Health > 0 and head ~= nil
end

-- Red Dot Head
local function addMarker(head)
    if marker then marker:Destroy() end
    marker = Instance.new("BillboardGui")
    marker.Size = UDim2.new(0,6,0,6)
    marker.AlwaysOnTop = true
    marker.Adornee = head
    local dot = Instance.new("Frame", marker)
    dot.Size = UDim2.new(1,0,1,0)
    dot.BackgroundColor3 = Color3.new(1,0,0)
    dot.BorderSizePixel = 0
    dot.AnchorPoint = Vector2.new(0.5,0.5)
    dot.Position = UDim2.new(0.5,0,0.5,0)
    marker.Parent = head
end

local function removeMarker()
    if marker then
        marker:Destroy()
        marker = nil
    end
end

-- Player
local function closestToMouse()
    local best, bestDist = nil, math.huge
    local mousePos = UIS:GetMouseLocation() - Vector2.new(0,36)
    for _, plr in ipairs(Players:GetPlayers()) do
        if valid(plr) then
            local head = plr.Character.Head
            local vp, onScreen = Camera:WorldToViewportPoint(head.Position)
            if onScreen then
                local d = (Vector2.new(vp.X,vp.Y) - mousePos).Magnitude
                if d < bestDist then
                    bestDist = d
                    best = plr
                end
            end
        end
    end
    return best
end

-- Tool?
local function holdingTool()
    return LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool") ~= nil
end

-- Input
UIS.InputBegan:Connect(function(input,gpe)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        holdingRMB = true
        return
    end
    if gpe then return end

    if input.KeyCode == Enum.KeyCode.Q then
        if camlockOn then
            camlockOn = false
            target = nil
            removeMarker()
            StatusLabel.Text = "Locking: None"
        else
            target = closestToMouse()
            if target then
                camlockOn = true
                addMarker(target.Character.Head)
                StatusLabel.Text = "Locking: " .. target.Name
            end
        end
    elseif input.KeyCode == Enum.KeyCode.One
        or input.KeyCode == Enum.KeyCode.Two
        or input.KeyCode == Enum.KeyCode.Three then
        allowSlot = true
    else
        allowSlot = false
    end
end)

UIS.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        holdingRMB = false
    end
end)

-- Loop (prediction + smoothness)
RunService.RenderStepped:Connect(function()
    if target and not valid(target) then
        target = nil
        camlockOn = false
        removeMarker()
        StatusLabel.Text = "Locking: None"
        return
    end

    if camlockOn and holdingRMB and allowSlot and holdingTool() and target then
        local char = target.Character
        if char and char:FindFirstChild("Head") and char:FindFirstChild("HumanoidRootPart") then
            local head = char.Head
            local hrp = char.HumanoidRootPart
            local predictedPos = head.Position + (hrp.Velocity * prediction)

            local goal = CFrame.new(Camera.CFrame.Position, predictedPos)
            Camera.CFrame = Camera.CFrame:Lerp(goal, smoothness)
        end
    end
end)
